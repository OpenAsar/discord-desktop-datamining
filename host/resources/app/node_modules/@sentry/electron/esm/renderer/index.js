import { Integrations as Integrations$1 } from '@sentry/browser';
export { BrowserClient, BrowserProfilingIntegration, BrowserTracing, Replay, addTracingExtensions, breadcrumbsIntegration, browserApiErrorsIntegration, browserProfilingIntegration, browserTracingIntegration, dedupeIntegration, feedbackIntegration, globalHandlersIntegration, httpContextIntegration, lastEventId, linkedErrorsIntegration, replayCanvasIntegration, replayIntegration, sendFeedback, showReportDialog } from '@sentry/browser';
import * as index from './integrations/index.js';
import { metrics as metrics$1 } from '@sentry/core';
export { Hub, ModuleMetadata, Scope, addBreadcrumb, addEventProcessor, addGlobalEventProcessor, addIntegration, captureCheckIn, captureEvent, captureException, captureMessage, configureScope, continueTrace, createTransport, extractTraceparentData, functionToStringIntegration, getActiveSpan, getActiveTransaction, getClient, getCurrentHub, getCurrentScope, getGlobalScope, getHubFromCarrier, getIsolationScope, inboundFiltersIntegration, makeMain, moduleMetadataIntegration, parameterize, runWithAsyncContext, setContext, setExtra, setExtras, setMeasurement, setTag, setTags, setUser, spanStatusfromHttpCode, startActiveSpan, startInactiveSpan, startSpan, startSpanManual, startTransaction, trace, withMonitor, withScope } from '@sentry/core';
export { scopeToMainIntegration } from './integrations/scope-to-main.js';
import { MetricsAggregator } from './integrations/metrics-aggregator.js';
export { metricsAggregatorIntegration } from './integrations/metrics-aggregator.js';
export { defaultIntegrations, init } from './sdk.js';

const metrics = Object.assign(Object.assign({}, metrics$1), { 
    // Override the default browser metrics aggregator with the Electron renderer one
    MetricsAggregator });
/**
 * @deprecated All integrations are now exported from the root of the package.
 */
// eslint-disable-next-line deprecation/deprecation
const Integrations = Object.assign(Object.assign({}, Integrations$1), index);

export { Integrations, metrics };
//# sourceMappingURL=index.js.map
