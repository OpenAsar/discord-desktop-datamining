import { Integrations as Integrations$1 } from '@sentry/node';
export { NodeClient, close, flush, lastEventId } from '@sentry/node';
import * as index from './integrations/index.js';
export { FunctionToString, Hub, InboundFilters, Scope, addBreadcrumb, addGlobalEventProcessor, captureEvent, captureException, captureMessage, configureScope, createTransport, getCurrentHub, getHubFromCarrier, makeMain, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope } from '@sentry/core';
export { makeElectronTransport } from './transports/electron-net.js';
export { makeElectronOfflineTransport } from './transports/electron-offline-net.js';
export { defaultIntegrations, init } from './sdk.js';
import { ensureProcess } from '../common/process.js';
export { IPCMode } from '../common/mode.js';

ensureProcess('main');
const Integrations = Object.assign(Object.assign({}, index), Integrations$1);

export { Integrations };
//# sourceMappingURL=index.js.map
